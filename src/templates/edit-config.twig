{% extends "emails/_includes/email" %}
{% import "_includes/forms" as forms %}

{% set title = 'Edit Email Config'|t('emails') %}
{% set fullPageForm = true %}
{% set errors = email.getErrors() %}
{% set emailSettings = craft.app.systemSettings.getSettings('email') %}

{% set selectedTab = 'config' %}

{% block content %}
    {{ actionInput('emails/cp-emails/save-config') }}
    {{ hiddenInput('id', email.id) }}
    {% if 'heading' in settings.configDriven %}
        {{ forms.textField({
            label: 'Heading'|t('emails'),
            name: 'heading',
            value: email.heading,
            required: true,
            errors: errors['heading'] ?? []
        }) }}
    {% endif %}
    {{ forms.textField({
        label: 'Key'|t('emails'),
        name: 'key',
        value: email.key,
        disabled: email.system == 1,
        errors: errors['key'] ?? [],
        required: true,
        warning: email.system ? '' : 'Changing this may break emails that use this template'|t('emails'),
        instructions: email.system ? 'This is a system email and its key cannot be changed'|t('emails') : ''
    }) }}
    {{ forms.lightswitchField({
        label: 'Plain text email'|t('emails'),
        name: 'plain',
        on: email.plain,
        instructions: "Do not use Html for this email's body"|t('emails'),
        id: 'lightswitch-plain'
    }) }}
    {{ forms.selectField({
        label: 'Body Redactor config'|t('emails'),
        instructions: 'You can save custom Redactor configs as .json files in config/redactor/'|t('emails'),
        options: settings.redactorConfigOptions,
        required: true,
        errors: errors['redactorConfig'] ?? [],
        name: 'redactorConfig',
        value: email.redactorConfig,
        id: 'redactor-config'
    }) }}
    {{ forms.textareaField({
        label: 'Instructions'|t('emails'),
        name: 'instructions',
        value: email.instructions,
        instructions: "Instructions for the user writing the email's body, displayed as a tip."|t('emails'),
        errors: errors['instructions'] ?? []
    }) }}
    {% if 'from' in settings.configDriven %}
        {{ forms.autosuggestField({
            label: 'Email from'|t('emails'),
            type: 'email',
            name: 'from',
            value: email.from,
            suggestEnvVars: true,
            placeholder: emailSettings.fromEmail,
            errors: errors['from'] ?? []
        }) }}
    {% endif %}
    {% if 'fromName' in settings.configDriven %}
        {{ forms.autosuggestField({
            label: 'Name from'|t('emails'),
            name: 'fromName',
            value: email.fromName,
            suggestEnvVars: true,
            placeholder: emailSettings.fromName,
            errors: errors['fromName'] ?? []
        }) }}
    {% endif %}
    {% if 'replyTo' in settings.configDriven %}
        {{ forms.autosuggestField({
            label: 'Reply to email'|t('emails'),
            type: 'email',
            name: 'replyTo',
            value: email.replyTo,
            suggestEnvVars: true,
            placeholder: emailSettings.replyToEmail ?? emailSettings.fromEmail,
            errors: errors['replyTo'] ?? []
        }) }}
    {% endif %}
    {% if 'cc' in settings.configDriven %}
        {{ forms.autosuggestField({
            label: 'Cc'|t('emails'),
            name: 'cc',
            value: email.cc,
            suggestEnvVars: true,
            instructions: 'Comma separated emails'|t('emails'),
            errors: errors['cc'] ?? []
        }) }}
    {% endif %}
    {% if 'bcc' in settings.configDriven %}
        {{ forms.autosuggestField({
            label: 'Bcc'|t('emails'),
            name: 'bcc',
            value: email.bcc,
            suggestEnvVars: true,
            instructions: 'Comma separated emails'|t('emails'),
            errors: errors['bcc'] ?? []
        }) }}
    {% endif %}
    {% if 'subject' in settings.configDriven %}
        {{ forms.textareaField({
            label: 'Subject'|t('emails'),
            name: 'subject',
            value: email.subject,
            instructions: 'Subject of the email, twig supported'|t('emails'),
            errors: errors['subject'] ?? []
        }) }}
    {% endif %}
    {% if 'body' in settings.configDriven %}
        {% include "emails/_includes/body" %}
    {% endif %}
    {% if 'attachements' in settings.configDriven %}
        {% include "emails/_includes/attachements" %}
    {% endif %}
    {{ forms.lightswitchField({
        label: 'Save logs'|t('emails'),
        name: 'saveLogs',
        on: email.saveLogs,
        instructions: 'Save logs of sent emails. You will be able to resend emails if this is enabled.'|t('emails'),
    }) }}
{% endblock %}

{% js on ready %}
    function toggleRedactorField() {
        if ($('#lightswitch-plain-field .lightswitch').hasClass('on')) {
            $('#redactor-config-field').slideUp();
        } else {
            $('#redactor-config-field').slideDown();
        }
    }
    $('#lightswitch-plain-field .lightswitch').on('change', function () {
        toggleRedactorField();
    });
    if ($('#lightswitch-plain-field .lightswitch').hasClass('on')) {
        $('#redactor-config-field').hide();
    }
{% endjs %}
